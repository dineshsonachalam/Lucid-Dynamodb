name: integration-tests

on:
  push:
    branches:
      - master
    tags:
      - latest

jobs:

  integration-tests:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

        - name: Start integration test
          env: 
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          run: |
            pip3 install virtualenv
            python3 -m venv env
            source env/bin/activate
            pip3 install -r requirements-dev.txt
            python setup.py install
            pytest --cov-report=xml --cov=./LucidDynamodb

        - name: SonarCloud Scan
          uses: sonarsource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ github.token }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  module-dependencies-license-checker:
      needs: integration-tests
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: Install dependencies
          run: pip3 install pip-licenses
        
        - name: Get all dependent module licenses
          run: pip-licenses --format=html --output-file=./module-dependencies-license-report.md
        
        - name: Upload module-dependencies license report to Artifact
          uses: actions/upload-artifact@v2
          with:
            name: module-dependencies-license-report
            path: ${{ github.workspace }}/module-dependencies-license-report.md

  dependency-graph:
      needs: module-dependencies-license-checker
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: Install dependencies
          run: |
            pip3 install graphviz pipdeptree
            sudo apt-get -y install graphviz
        
        - name: Create dependency graph
          run: pipdeptree --graph-output png > ./dependency-graph.png
        
        - name: Upload dependency graph to Artifact
          uses: actions/upload-artifact@v2
          with:
            name: dependency-graph
            path: ${{ github.workspace }}/dependency-graph.png

  deploy-to-pypi:
      needs: dependency-graph
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Install package dependencies
          run: pip3 install -r requirements-dev.txt

        - name: Build python package and deploy to PYPI
          run: |
            rm -rf build dist *.egg-info
            python3 setup.py sdist bdist_wheel
            twine upload --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --skip-existing dist/*

  
